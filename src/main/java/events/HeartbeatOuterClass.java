// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: heartbeat.proto

package events;

public final class HeartbeatOuterClass {
  private HeartbeatOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeartbeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:events.Heartbeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 sentCount = 1;</code>
     *
     * <pre>
     *&#47; Number of events sent by this emitter.
     * </pre>
     */
    boolean hasSentCount();
    /**
     * <code>required uint64 sentCount = 1;</code>
     *
     * <pre>
     *&#47; Number of events sent by this emitter.
     * </pre>
     */
    long getSentCount();

    /**
     * <code>required uint64 receivedCount = 2;</code>
     *
     * <pre>
     *&#47; Number of events received by this emitter from the host process.
     * </pre>
     */
    boolean hasReceivedCount();
    /**
     * <code>required uint64 receivedCount = 2;</code>
     *
     * <pre>
     *&#47; Number of events received by this emitter from the host process.
     * </pre>
     */
    long getReceivedCount();

    /**
     * <code>required uint64 errorCount = 3;</code>
     *
     * <pre>
     *&#47; Number of errors encountered while sending.
     * </pre>
     */
    boolean hasErrorCount();
    /**
     * <code>required uint64 errorCount = 3;</code>
     *
     * <pre>
     *&#47; Number of errors encountered while sending.
     * </pre>
     */
    long getErrorCount();

    /**
     * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
     *
     * <pre>
     *&#47; The id of the control message which requested this heartbeat
     * </pre>
     */
    boolean hasControlMessageIdentifier();
    /**
     * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
     *
     * <pre>
     *&#47; The id of the control message which requested this heartbeat
     * </pre>
     */
    events.Uuid.UUID getControlMessageIdentifier();
    /**
     * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
     *
     * <pre>
     *&#47; The id of the control message which requested this heartbeat
     * </pre>
     */
    events.Uuid.UUIDOrBuilder getControlMessageIdentifierOrBuilder();
  }
  /**
   * Protobuf type {@code events.Heartbeat}
   *
   * <pre>
   *&#47; A Heartbeat event both indicates liveness of the emitter, and communicates counts of events processed.
   * </pre>
   */
  public static final class Heartbeat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:events.Heartbeat)
      HeartbeatOrBuilder {
    // Use Heartbeat.newBuilder() to construct.
    private Heartbeat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Heartbeat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Heartbeat defaultInstance;
    public static Heartbeat getDefaultInstance() {
      return defaultInstance;
    }

    public Heartbeat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Heartbeat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sentCount_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              receivedCount_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              errorCount_ = input.readUInt64();
              break;
            }
            case 34: {
              events.Uuid.UUID.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = controlMessageIdentifier_.toBuilder();
              }
              controlMessageIdentifier_ = input.readMessage(events.Uuid.UUID.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(controlMessageIdentifier_);
                controlMessageIdentifier_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return events.HeartbeatOuterClass.internal_static_events_Heartbeat_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return events.HeartbeatOuterClass.internal_static_events_Heartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              events.HeartbeatOuterClass.Heartbeat.class, events.HeartbeatOuterClass.Heartbeat.Builder.class);
    }

    public static com.google.protobuf.Parser<Heartbeat> PARSER =
        new com.google.protobuf.AbstractParser<Heartbeat>() {
      public Heartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Heartbeat(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Heartbeat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SENTCOUNT_FIELD_NUMBER = 1;
    private long sentCount_;
    /**
     * <code>required uint64 sentCount = 1;</code>
     *
     * <pre>
     *&#47; Number of events sent by this emitter.
     * </pre>
     */
    public boolean hasSentCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 sentCount = 1;</code>
     *
     * <pre>
     *&#47; Number of events sent by this emitter.
     * </pre>
     */
    public long getSentCount() {
      return sentCount_;
    }

    public static final int RECEIVEDCOUNT_FIELD_NUMBER = 2;
    private long receivedCount_;
    /**
     * <code>required uint64 receivedCount = 2;</code>
     *
     * <pre>
     *&#47; Number of events received by this emitter from the host process.
     * </pre>
     */
    public boolean hasReceivedCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 receivedCount = 2;</code>
     *
     * <pre>
     *&#47; Number of events received by this emitter from the host process.
     * </pre>
     */
    public long getReceivedCount() {
      return receivedCount_;
    }

    public static final int ERRORCOUNT_FIELD_NUMBER = 3;
    private long errorCount_;
    /**
     * <code>required uint64 errorCount = 3;</code>
     *
     * <pre>
     *&#47; Number of errors encountered while sending.
     * </pre>
     */
    public boolean hasErrorCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 errorCount = 3;</code>
     *
     * <pre>
     *&#47; Number of errors encountered while sending.
     * </pre>
     */
    public long getErrorCount() {
      return errorCount_;
    }

    public static final int CONTROLMESSAGEIDENTIFIER_FIELD_NUMBER = 4;
    private events.Uuid.UUID controlMessageIdentifier_;
    /**
     * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
     *
     * <pre>
     *&#47; The id of the control message which requested this heartbeat
     * </pre>
     */
    public boolean hasControlMessageIdentifier() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
     *
     * <pre>
     *&#47; The id of the control message which requested this heartbeat
     * </pre>
     */
    public events.Uuid.UUID getControlMessageIdentifier() {
      return controlMessageIdentifier_;
    }
    /**
     * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
     *
     * <pre>
     *&#47; The id of the control message which requested this heartbeat
     * </pre>
     */
    public events.Uuid.UUIDOrBuilder getControlMessageIdentifierOrBuilder() {
      return controlMessageIdentifier_;
    }

    private void initFields() {
      sentCount_ = 0L;
      receivedCount_ = 0L;
      errorCount_ = 0L;
      controlMessageIdentifier_ = events.Uuid.UUID.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSentCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReceivedCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasErrorCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasControlMessageIdentifier()) {
        if (!getControlMessageIdentifier().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, sentCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, receivedCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, errorCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, controlMessageIdentifier_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, sentCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, receivedCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, errorCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, controlMessageIdentifier_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static events.HeartbeatOuterClass.Heartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static events.HeartbeatOuterClass.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(events.HeartbeatOuterClass.Heartbeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code events.Heartbeat}
     *
     * <pre>
     *&#47; A Heartbeat event both indicates liveness of the emitter, and communicates counts of events processed.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:events.Heartbeat)
        events.HeartbeatOuterClass.HeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return events.HeartbeatOuterClass.internal_static_events_Heartbeat_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return events.HeartbeatOuterClass.internal_static_events_Heartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                events.HeartbeatOuterClass.Heartbeat.class, events.HeartbeatOuterClass.Heartbeat.Builder.class);
      }

      // Construct using events.HeartbeatOuterClass.Heartbeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getControlMessageIdentifierFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sentCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        receivedCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        errorCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (controlMessageIdentifierBuilder_ == null) {
          controlMessageIdentifier_ = events.Uuid.UUID.getDefaultInstance();
        } else {
          controlMessageIdentifierBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return events.HeartbeatOuterClass.internal_static_events_Heartbeat_descriptor;
      }

      public events.HeartbeatOuterClass.Heartbeat getDefaultInstanceForType() {
        return events.HeartbeatOuterClass.Heartbeat.getDefaultInstance();
      }

      public events.HeartbeatOuterClass.Heartbeat build() {
        events.HeartbeatOuterClass.Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public events.HeartbeatOuterClass.Heartbeat buildPartial() {
        events.HeartbeatOuterClass.Heartbeat result = new events.HeartbeatOuterClass.Heartbeat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sentCount_ = sentCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.receivedCount_ = receivedCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.errorCount_ = errorCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (controlMessageIdentifierBuilder_ == null) {
          result.controlMessageIdentifier_ = controlMessageIdentifier_;
        } else {
          result.controlMessageIdentifier_ = controlMessageIdentifierBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof events.HeartbeatOuterClass.Heartbeat) {
          return mergeFrom((events.HeartbeatOuterClass.Heartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(events.HeartbeatOuterClass.Heartbeat other) {
        if (other == events.HeartbeatOuterClass.Heartbeat.getDefaultInstance()) return this;
        if (other.hasSentCount()) {
          setSentCount(other.getSentCount());
        }
        if (other.hasReceivedCount()) {
          setReceivedCount(other.getReceivedCount());
        }
        if (other.hasErrorCount()) {
          setErrorCount(other.getErrorCount());
        }
        if (other.hasControlMessageIdentifier()) {
          mergeControlMessageIdentifier(other.getControlMessageIdentifier());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSentCount()) {

          return false;
        }
        if (!hasReceivedCount()) {

          return false;
        }
        if (!hasErrorCount()) {

          return false;
        }
        if (hasControlMessageIdentifier()) {
          if (!getControlMessageIdentifier().isInitialized()) {

            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        events.HeartbeatOuterClass.Heartbeat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (events.HeartbeatOuterClass.Heartbeat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long sentCount_ ;
      /**
       * <code>required uint64 sentCount = 1;</code>
       *
       * <pre>
       *&#47; Number of events sent by this emitter.
       * </pre>
       */
      public boolean hasSentCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 sentCount = 1;</code>
       *
       * <pre>
       *&#47; Number of events sent by this emitter.
       * </pre>
       */
      public long getSentCount() {
        return sentCount_;
      }
      /**
       * <code>required uint64 sentCount = 1;</code>
       *
       * <pre>
       *&#47; Number of events sent by this emitter.
       * </pre>
       */
      public Builder setSentCount(long value) {
        bitField0_ |= 0x00000001;
        sentCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 sentCount = 1;</code>
       *
       * <pre>
       *&#47; Number of events sent by this emitter.
       * </pre>
       */
      public Builder clearSentCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sentCount_ = 0L;
        onChanged();
        return this;
      }

      private long receivedCount_ ;
      /**
       * <code>required uint64 receivedCount = 2;</code>
       *
       * <pre>
       *&#47; Number of events received by this emitter from the host process.
       * </pre>
       */
      public boolean hasReceivedCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 receivedCount = 2;</code>
       *
       * <pre>
       *&#47; Number of events received by this emitter from the host process.
       * </pre>
       */
      public long getReceivedCount() {
        return receivedCount_;
      }
      /**
       * <code>required uint64 receivedCount = 2;</code>
       *
       * <pre>
       *&#47; Number of events received by this emitter from the host process.
       * </pre>
       */
      public Builder setReceivedCount(long value) {
        bitField0_ |= 0x00000002;
        receivedCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 receivedCount = 2;</code>
       *
       * <pre>
       *&#47; Number of events received by this emitter from the host process.
       * </pre>
       */
      public Builder clearReceivedCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        receivedCount_ = 0L;
        onChanged();
        return this;
      }

      private long errorCount_ ;
      /**
       * <code>required uint64 errorCount = 3;</code>
       *
       * <pre>
       *&#47; Number of errors encountered while sending.
       * </pre>
       */
      public boolean hasErrorCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 errorCount = 3;</code>
       *
       * <pre>
       *&#47; Number of errors encountered while sending.
       * </pre>
       */
      public long getErrorCount() {
        return errorCount_;
      }
      /**
       * <code>required uint64 errorCount = 3;</code>
       *
       * <pre>
       *&#47; Number of errors encountered while sending.
       * </pre>
       */
      public Builder setErrorCount(long value) {
        bitField0_ |= 0x00000004;
        errorCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 errorCount = 3;</code>
       *
       * <pre>
       *&#47; Number of errors encountered while sending.
       * </pre>
       */
      public Builder clearErrorCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        errorCount_ = 0L;
        onChanged();
        return this;
      }

      private events.Uuid.UUID controlMessageIdentifier_ = events.Uuid.UUID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Uuid.UUID, Uuid.UUID.Builder, Uuid.UUIDOrBuilder> controlMessageIdentifierBuilder_;
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      public boolean hasControlMessageIdentifier() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      public events.Uuid.UUID getControlMessageIdentifier() {
        if (controlMessageIdentifierBuilder_ == null) {
          return controlMessageIdentifier_;
        } else {
          return controlMessageIdentifierBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      public Builder setControlMessageIdentifier(events.Uuid.UUID value) {
        if (controlMessageIdentifierBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          controlMessageIdentifier_ = value;
          onChanged();
        } else {
          controlMessageIdentifierBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      public Builder setControlMessageIdentifier(
          events.Uuid.UUID.Builder builderForValue) {
        if (controlMessageIdentifierBuilder_ == null) {
          controlMessageIdentifier_ = builderForValue.build();
          onChanged();
        } else {
          controlMessageIdentifierBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      public Builder mergeControlMessageIdentifier(events.Uuid.UUID value) {
        if (controlMessageIdentifierBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              controlMessageIdentifier_ != events.Uuid.UUID.getDefaultInstance()) {
            controlMessageIdentifier_ =
              events.Uuid.UUID.newBuilder(controlMessageIdentifier_).mergeFrom(value).buildPartial();
          } else {
            controlMessageIdentifier_ = value;
          }
          onChanged();
        } else {
          controlMessageIdentifierBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      public Builder clearControlMessageIdentifier() {
        if (controlMessageIdentifierBuilder_ == null) {
          controlMessageIdentifier_ = events.Uuid.UUID.getDefaultInstance();
          onChanged();
        } else {
          controlMessageIdentifierBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      public events.Uuid.UUID.Builder getControlMessageIdentifierBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getControlMessageIdentifierFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      public events.Uuid.UUIDOrBuilder getControlMessageIdentifierOrBuilder() {
        if (controlMessageIdentifierBuilder_ != null) {
          return controlMessageIdentifierBuilder_.getMessageOrBuilder();
        } else {
          return controlMessageIdentifier_;
        }
      }
      /**
       * <code>optional .events.UUID controlMessageIdentifier = 4;</code>
       *
       * <pre>
       *&#47; The id of the control message which requested this heartbeat
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Uuid.UUID, Uuid.UUID.Builder, Uuid.UUIDOrBuilder>
          getControlMessageIdentifierFieldBuilder() {
        if (controlMessageIdentifierBuilder_ == null) {
          controlMessageIdentifierBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Uuid.UUID, Uuid.UUID.Builder, Uuid.UUIDOrBuilder>(
                  getControlMessageIdentifier(),
                  getParentForChildren(),
                  isClean());
          controlMessageIdentifier_ = null;
        }
        return controlMessageIdentifierBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:events.Heartbeat)
    }

    static {
      defaultInstance = new Heartbeat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:events.Heartbeat)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_events_Heartbeat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_events_Heartbeat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017heartbeat.proto\022\006events\032\nuuid.proto\"y\n" +
      "\tHeartbeat\022\021\n\tsentCount\030\001 \002(\004\022\025\n\rreceive" +
      "dCount\030\002 \002(\004\022\022\n\nerrorCount\030\003 \002(\004\022.\n\030cont" +
      "rolMessageIdentifier\030\004 \001(\0132\014.events.UUID"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          events.Uuid.getDescriptor(),
        }, assigner);
    internal_static_events_Heartbeat_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_events_Heartbeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_events_Heartbeat_descriptor,
        new String[] { "SentCount", "ReceivedCount", "ErrorCount", "ControlMessageIdentifier", });
    events.Uuid.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
